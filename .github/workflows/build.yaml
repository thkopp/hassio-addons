name: Build Home Assistant Addons

on:
  push:
    paths:
      - "addon-*/**"
  workflow_dispatch:
    inputs:
      addon:
        description: "Addon-Ordner zum Bauen (optional)"
        required: false

jobs:
  detect-addons:
    runs-on: ubuntu-latest
    outputs:
      addons: ${{ steps.set_addons.outputs.addons }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changed addons
        id: set_addons
        run: |
          if [ -n "${{ github.event.inputs.addon }}" ]; then
            ADDONS_RAW="[\"${{ github.event.inputs.addon }}\"]"
          else
            if git rev-parse HEAD~1 >/dev/null 2>&1; then
              BEFORE=$(git rev-parse HEAD~1)
            else
              BEFORE=$(git rev-list --max-parents=0 HEAD)
            fi

            ADDONS_RAW=$(git diff --name-only "$BEFORE" HEAD \
              | grep '^addon-' \
              | cut -d/ -f1 \
              | sort -u \
              | jq -R -s -c 'split("\n")[:-1]')
          fi

          if [ "$ADDONS_RAW" = "[]" ]; then
            echo "‚ö†Ô∏è Kein ge√§ndertes Addon gefunden."
            exit 0
          fi

          ADDONS_OBJ=$(echo "$ADDONS_RAW" | jq -c '[.[] | {addon: .}]')
          echo "addons=$ADDONS_OBJ" >> $GITHUB_OUTPUT

  build:
    needs: detect-addons
    if: needs.detect-addons.outputs.addons != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.detect-addons.outputs.addons) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          wget -q https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Read addon config
        id: read_config
        run: |
          ADDON="${{ matrix.addon }}"
          CONFIG="$GITHUB_WORKSPACE/$ADDON/config.yaml"

          if [ ! -f "$CONFIG" ]; then
            echo "‚ùå config.yaml f√ºr Addon '$ADDON' nicht gefunden!"
            exit 1
          fi

          VERSION=$(yq -r '.version' "$CONFIG")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          IMAGE=$(yq -r '.image' "$CONFIG")
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

          # Archs auslesen
          ARCHS=$(yq -r '.arch | join(",")' "$CONFIG")
          echo "archs=$ARCHS" >> $GITHUB_OUTPUT

          # build_from f√ºr alle Archs sammeln
          for ARCH in $(yq -r '.arch[]' "$CONFIG"); do
            BF=$(yq -r ".build_from.$ARCH" "$CONFIG")
            if [ "$BF" != "null" ]; then
              echo "build_from_$ARCH=$BF" >> $GITHUB_OUTPUT
            fi
          done

      - name: Build and push multi-arch image
        run: |
          ADDON="${{ matrix.addon }}"
          VERSION="${{ steps.read_config.outputs.version }}"
          IMAGE="${{ steps.read_config.outputs.image }}"
          ARCHS="${{ steps.read_config.outputs.archs }}"

          # Build args pro Arch vorbereiten
          BUILD_ARGS=""
          for ARCH in ${ARCHS//,/ }; do
            BF_VAR="build_from_$ARCH"
            BF="${{ steps.read_config.outputs[BF_VAR] }}"
            if [ -z "$BF" ] || [ "$BF" = "null" ]; then
              echo "‚ùå build_from f√ºr $ARCH nicht gefunden!"
              exit 1
            fi
            BUILD_ARGS="$BUILD_ARGS --build-arg BUILD_FROM_$ARCH=$BF"
          done

          echo "üî® Building $ADDON for $ARCHS..."
          docker buildx build \
            --platform $ARCHS \
            $BUILD_ARGS \
            -t "$IMAGE:latest" \
            -t "$IMAGE:$VERSION" \
            "$GITHUB_WORKSPACE/$ADDON" \
            --push
