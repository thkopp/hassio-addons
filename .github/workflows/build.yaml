name: Build Home Assistant Addons

on:
  push:
    paths:
      - "addon-*/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: [addon-mdns-example, addon-hello-world] # oder dynamisch via Detect-Step
        platform: [linux/amd64, linux/arm64]

    steps:
      # 1️⃣ Repository auschecken mit mindestens 2 Commits
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # 2️⃣ QEMU & Buildx Setup
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Login zu GHCR
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      # 4️⃣ Installiere yq (für Version Parsing)
      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      # 5️⃣ Version aus config.yaml auslesen (robust, ohne Anführungszeichen)
      - name: Extract version
        id: get_version
        run: |
          ADDON_DIR="${{ steps.detect_addon.outputs.addon_dir }}"
          CONFIG="${{ github.workspace }}/$ADDON_DIR/config.yaml"

          # Prüfen, ob die Datei existiert
          if [ ! -f "$CONFIG" ]; then
            echo "❌ config.yaml für Addon '$ADDON_DIR' nicht gefunden unter '$CONFIG'!"
            exit 1
          fi

          # Version auslesen (robust, entfernt Anführungszeichen)
          VERSION=$(yq -r '.version' "$CONFIG" | tr -d '"')

          # Prüfen, ob Version gesetzt ist
          if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
            echo "❌ Keine Version in $CONFIG gefunden!"
            exit 1
          fi

          echo "✅ Gefundene Version für '$ADDON_DIR': $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 6️⃣ Basis-Image wählen (archabhängig, Patch für HA)
      - name: Set BUILD_FROM
        id: build_from
        run: |
          case "${{ matrix.platform }}" in
            linux/amd64) BUILD_FROM="ghcr.io/home-assistant/amd64-base:3.18" ;;
            linux/arm64) BUILD_FROM="ghcr.io/home-assistant/arm64-base:3.18" ;;
            *) echo "❌ Unknown platform"; exit 1 ;;
          esac
          echo "build_from=$BUILD_FROM" >> $GITHUB_OUTPUT
          echo "✅ BUILD_FROM=${BUILD_FROM}"

      # 7️⃣ Docker Build & Push (robust, Multi-Arch per Matrix)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ matrix.addon }}
          platforms: ${{ matrix.platform }}
          push: true
          build-args: |
            BUILD_FROM=${{ steps.build_from.outputs.build_from }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.addon }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.addon }}:${{ steps.get_version.outputs.version }}
