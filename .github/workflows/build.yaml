name: Build Home Assistant Addons

on:
  push:
    paths:
      - "addon-*/**"
  workflow_dispatch:
    inputs:
      addon:
        description: "Addon-Ordner zum Bauen (optional)"
        required: false

jobs:
  detect-addons:
    runs-on: ubuntu-latest
    outputs:
      addons: ${{ steps.set_addons.outputs.addons }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changed addons
        id: set_addons
        run: |
          if [ -n "${{ github.event.inputs.addon }}" ]; then
            ADDONS_RAW="[\"${{ github.event.inputs.addon }}\"]"
          else
            if git rev-parse HEAD~1 >/dev/null 2>&1; then
              BEFORE=$(git rev-parse HEAD~1)
            else
              BEFORE=$(git rev-list --max-parents=0 HEAD)
            fi

            ADDONS_RAW=$(git diff --name-only "$BEFORE" HEAD \
              | grep '^addon-' \
              | cut -d/ -f1 \
              | sort -u \
              | jq -R -s -c 'split("\n")[:-1]')
          fi

          if [ "$ADDONS_RAW" = "[]" ]; then
            echo "‚ö†Ô∏è Kein ge√§ndertes Addon gefunden."
            exit 0
          fi

          # In Objekte f√ºr Matrix umwandeln (kein Escaping!)
          ADDONS_OBJ=$(echo "$ADDONS_RAW" | jq '[.[] | {addon: .}]')
          echo "‚úÖ Gefundene Addons: $ADDONS_OBJ"
          echo "addons=$ADDONS_OBJ" >> $GITHUB_OUTPUT

  build:
    needs: detect-addons
    if: needs.detect-addons.outputs.addons != '' # Job nur ausf√ºhren, wenn Addons existieren
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.detect-addons.outputs.addons) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          wget -q https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version

      - name: Set platform list
        run: echo "PLATFORMS=linux/amd64 linux/arm64" >> $GITHUB_ENV

      - name: Build Addon for all platforms
        run: |
          ADDON="${{ matrix.addon }}"
          CONFIG="$GITHUB_WORKSPACE/$ADDON/config.yaml"

          if [ ! -f "$CONFIG" ]; then
            echo "‚ùå config.yaml f√ºr Addon '$ADDON' nicht gefunden!"
            exit 1
          fi

          VERSION=$(yq -r '.version' "$CONFIG" | tr -d '"')
          if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
            echo "‚ùå Keine Version in $CONFIG gefunden!"
            exit 1
          fi
          echo "‚úÖ Addon: $ADDON Version: $VERSION"

          for PLATFORM in $PLATFORMS; do
            case "$PLATFORM" in
              linux/amd64) BUILD_FROM="ghcr.io/home-assistant/amd64-base:3.18" ;;
              linux/arm64) BUILD_FROM="ghcr.io/home-assistant/arm64-base:3.18" ;;
            esac

            echo "üî® Building $ADDON for $PLATFORM..."
            docker buildx build \
              --platform $PLATFORM \
              --build-arg BUILD_FROM=$BUILD_FROM \
              -t ghcr.io/${GITHUB_REPOSITORY_OWNER}/$ADDON:latest \
              -t ghcr.io/${GITHUB_REPOSITORY_OWNER}/$ADDON:$VERSION \
              $GITHUB_WORKSPACE/$ADDON \
              --push
          done
