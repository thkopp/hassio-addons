name: Build Home Assistant Addons

on:
  push:
    paths:
      - "addon-*/**"
  workflow_dispatch:
    inputs:
      addon:
        description: "Addon-Ordner zum Bauen (optional)"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
        addon: [placeholder] # Wird durch Detect ersetzt

    steps:
      # 1️⃣ Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # 2️⃣ Detect changed addons
      - name: Detect changed addons
        id: detect_addons
        run: |
          if [ -n "${{ github.event.inputs.addon }}" ]; then
            ADDONS="[\"${{ github.event.inputs.addon }}\"]"
            echo "✅ Manuell angegebenes Addon: $ADDONS"
          else
            # Vorherigen Commit ermitteln
            if git rev-parse HEAD~1 >/dev/null 2>&1; then
              BEFORE=$(git rev-parse HEAD~1)
            else
              BEFORE=$(git rev-list --max-parents=0 HEAD)
            fi

            # Alle geänderten Addons im Root-Verzeichnis
            ADDONS=$(git diff --name-only "$BEFORE" HEAD \
              | grep '^addon-' \
              | cut -d/ -f1 \
              | sort -u \
              | jq -R -s -c 'split("\n")[:-1]')

            if [ "$ADDONS" = "[]" ]; then
              echo "⚠️ Kein geändertes Addon gefunden, Workflow wird übersprungen"
              echo "addons=[]" >> $GITHUB_OUTPUT
              exit 0
            fi

            echo "✅ Gefundene Addons: $ADDONS"
          fi

          echo "addons=$ADDONS" >> $GITHUB_OUTPUT

      # 3️⃣ Set dynamic matrix
      - name: Set matrix
        id: matrix
        run: |
          echo "matrix=$(jq -n --argjson addons '${{ steps.detect_addons.outputs.addons }}' \
            '{addon: $addons, platform: ["linux/amd64","linux/arm64"]}')"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

      # 4️⃣ Setup QEMU & Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # 5️⃣ Login GHCR
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      # 6️⃣ Install yq blitzschnell
      - name: Install yq (binary)
        run: |
          YQ_VERSION=v4.45.1
          wget https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version

      # 7️⃣ Extract version
      - name: Extract version
        id: get_version
        if: matrix.addon != ''
        run: |
          CONFIG="${{ github.workspace }}/${{ matrix.addon }}/config.yaml"
          if [ ! -f "$CONFIG" ]; then
            echo "❌ config.yaml für Addon '${{ matrix.addon }}' nicht gefunden!"
            exit 1
          fi
          VERSION=$(yq -r '.version' "$CONFIG" | tr -d '"')
          if [ -z "$VERSION" ] || [ "$VERSION" = "null" ]; then
            echo "❌ Keine Version in $CONFIG gefunden!"
            exit 1
          fi
          echo "✅ Gefundene Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 8️⃣ Set BUILD_FROM
      - name: Set BUILD_FROM
        id: build_from
        run: |
          case "${{ matrix.platform }}" in
            linux/amd64) BUILD_FROM="ghcr.io/home-assistant/amd64-base:3.18" ;;
            linux/arm64) BUILD_FROM="ghcr.io/home-assistant/arm64-base:3.18" ;;
            *) echo "❌ Unknown platform"; exit 1 ;;
          esac
          echo "build_from=$BUILD_FROM" >> $GITHUB_OUTPUT
          echo "✅ BUILD_FROM=$BUILD_FROM"

      # 9️⃣ Build & Push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/${{ matrix.addon }}
          platforms: ${{ matrix.platform }}
          push: true
          build-args: |
            BUILD_FROM=${{ steps.build_from.outputs.build_from }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.addon }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ matrix.addon }}:${{ steps.get_version.outputs.version }}
